package io.gatling.demo;

import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.*;
import java.util.stream.Collectors;
import io.gatling.javaapi.core.*;
import io.gatling.javaapi.http.*;
import static io.gatling.javaapi.core.CoreDsl.*;
import static io.gatling.javaapi.http.HttpDsl.*;

// üìú –°—Ü–µ–Ω–∞—Ä–∏–π –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Web Tours: –ø–æ–∫—É–ø–∫–∞ –±–∏–ª–µ—Ç–∞ –æ—Ç –≤—Ö–æ–¥–∞ –¥–æ –≤—ã—Ö–æ–¥–∞
public class UC3_Buy_tickets extends Simulation {

    // üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª–∞: –±–∞–∑–æ–≤—ã–π URL, –∑–∞–≥–æ–ª–æ–≤–∫–∏, –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
    public static HttpProtocolBuilder httpProtocol = http
            .baseUrl("http://localhost:1080") // –ë–∞–∑–æ–≤—ã–π URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Web Tours
            .inferHtmlResources() // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ (CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
            .acceptHeader("text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8") // –§–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
            .acceptEncodingHeader("gzip, deflate, br") // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∂–∞—Ç–∏—è
            .acceptLanguageHeader("ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3") // –Ø–∑—ã–∫–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            .upgradeInsecureRequestsHeader("1") // –†–∞–∑—Ä–µ—à–∏—Ç—å –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
            .userAgentHeader("Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:137.0) Gecko/20100101 Firefox/137.0"); // –≠–º—É–ª—è—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ Firefox
    // –û–ø–∏—Å–∞–Ω–∏–µ: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤, —ç–º—É–ª–∏—Ä—É—è –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Web Tours.

    // üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
    public static Map<CharSequence, String> headers_0 = Map.ofEntries(
            Map.entry("Priority", "u=0, i"),
            Map.entry("Sec-Fetch-Dest", "document"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1"),
            Map.entry("Upgrade-Insecure-Requests", "1")
    ); // –î–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –≤—ã—Ö–æ–¥–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
    public static Map<CharSequence, String> headers_1 = Map.ofEntries(
            Map.entry("Priority", "u=4"),
            Map.entry("Sec-Fetch-Dest", "frame"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Upgrade-Insecure-Requests", "1")
    ); // –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ—Ä–µ–π–º–æ–≤
    public static Map<CharSequence, String> headers_2 = Map.ofEntries(
            Map.entry("Origin", "http://localhost:1080"),
            Map.entry("Priority", "u=0, i"),
            Map.entry("Sec-Fetch-Dest", "document"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1"),
            Map.entry("Upgrade-Insecure-Requests", "1")
    ); // –î–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞ –ª–æ–≥–∏–Ω–∞
    public static Map<CharSequence, String> headers_8 = Map.ofEntries(
            Map.entry("Content-Type", "multipart/form-data; boundary=----geckoformboundaryc0b0b6ec6c43edd6b1420a5e10375a3e"),
            Map.entry("Origin", "http://localhost:1080"),
            Map.entry("Priority", "u=4"),
            Map.entry("Sec-Fetch-Dest", "frame"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1"),
            Map.entry("Upgrade-Insecure-Requests", "1")
    ); // –î–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–∞
    public static Map<CharSequence, String> headers_9 = Map.ofEntries(
            Map.entry("Content-Type", "multipart/form-data; boundary=----geckoformboundarycb59c73863c264eec9c7faa52bc0c2c4"),
            Map.entry("Origin", "http://localhost:1080"),
            Map.entry("Priority", "u=4"),
            Map.entry("Sec-Fetch-Dest", "frame"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1"),
            Map.entry("Upgrade-Insecure-Requests", "1")
    ); // –î–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Å–∞
    public static Map<CharSequence, String> headers_10 = Map.ofEntries(
            Map.entry("Content-Type", "multipart/form-data; boundary=----geckoformboundary7e65d094c09310774c7b8aac56e3f0f"),
            Map.entry("Origin", "http://localhost:1080"),
            Map.entry("Priority", "u=4"),
            Map.entry("Sec-Fetch-Dest", "frame"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1"),
            Map.entry("Upgrade-Insecure-Requests", "1")
    ); // –î–ª—è –æ–ø–ª–∞—Ç—ã –±–∏–ª–µ—Ç–∞
    public static Map<CharSequence, String> headers_14 = Map.ofEntries(
            Map.entry("Accept", "image/avif,image/webp,image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5"),
            Map.entry("Priority", "u=5, i"),
            Map.entry("Sec-Fetch-Dest", "image"),
            Map.entry("Sec-Fetch-Mode", "no-cors"),
            Map.entry("Sec-Fetch-Site", "same-origin")
    ); // –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    // –û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞–±–æ—Ä—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —ç–º—É–ª–∏—Ä—É—é—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ (GET/POST, —Ñ—Ä–µ–π–º—ã, —Ñ–æ—Ä–º—ã, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è).
    // –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∞–ª—å–Ω—ã–º HTTP-–∑–∞–ø—Ä–æ—Å–∞–º, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–º Web Tours.

    // üóÇÔ∏è –§–∏–¥–µ—Ä: —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ —Ä–∞–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ users.csv
    public static final FeederBuilder<String> usersFeeder = csv("users.csv").circular();
    // –û–ø–∏—Å–∞–Ω–∏–µ: –§–∏–¥–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ users.csv (src/test/resources) –∏ —Ä–∞–∑–¥–∞—ë—Ç –∏—Ö
    // –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ –∫—Ä—É–≥—É. –ö–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è username, password, firstName,
    // lastName, address1, address2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã.

    // üóÇÔ∏è –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    public static final Random random = new Random();
    // –û–ø–∏—Å–∞–Ω–∏–µ: –û–±—ä–µ–∫—Ç Random –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–æ–º–µ—Ä–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã,
    // –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Å–∞, –¥–∞—Ç). –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

    // üè† –®–∞–≥ 1: –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    public static ChainBuilder homePage = group("Home_Page").on(
            exec(
                    http("home_page_0")
                            .get("/cgi-bin/welcome.pl?signOff=1") // –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –≤—ã—Ö–æ–¥–∞
                            .headers(headers_0)
                            .check(
                                    substring("Web Tours").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Web Tours –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    bodyString().saveAs("tempResponse_0") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                            )
            ),
            exec(
                    http("home_page_1")
                            .get("/cgi-bin/nav.pl?in=home") // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                            .headers(headers_1)
                            .check(
                                    regex("name=\"userSession\" value=\"(.+?)\"").saveAs("userSession"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ userSession
                                    substring("Web Tours Navigation Bar").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    bodyString().saveAs("tempResponse_1") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                            )
            )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ —ç–º—É–ª–∏—Ä—É–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã Web Tours.
    // - Home_Page_0: –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–µ—Å—Å–∏—é (signOff=1) –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ "Web Tours" –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_0.
    // - Home_Page_1: –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–µ—Å—Å–∏–∏ (userSession)
    //   —Å –ø–æ–º–æ—â—å—é regex –∏–∑ —Å–∫—Ä—ã—Ç–æ–≥–æ –ø–æ–ª—è —Ñ–æ—Ä–º—ã (<input name="userSession" value="...">).
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ "Web Tours Navigation Bar" –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_1.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–π userSession (–Ω–∞–ø—Ä–∏–º–µ—Ä, "JS12345") –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö.
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç —è–≤–Ω—ã—Ö System.out.println.

    // üîê –®–∞–≥ 2: –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
    public static ChainBuilder login = group("Login").on(
            feed(usersFeeder), // üóÇÔ∏è –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ users.csv
            exec(session -> {
                // ‚öôÔ∏è –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –¥–ª—è —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã
                String pass1 = session.getString("firstName") + " " + session.getString("lastName");
                return session.set("pass1", pass1);
            }),
            exec(
                    http("login_0")
                            .post("/cgi-bin/login.pl") // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –ª–æ–≥–∏–Ω–∞
                            .headers(headers_2)
                            .formParam("userSession", "#{userSession}") // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–µ—Å—Å–∏–∏ –∏–∑ —à–∞–≥–∞ homePage
                            .formParam("username", "#{username}") // –õ–æ–≥–∏–Ω –∏–∑ users.csv
                            .formParam("password", "#{password}") // –ü–∞—Ä–æ–ª—å –∏–∑ users.csv
                            .formParam("login.x", "39") // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–Ω–æ–ø–∫–∏ –ª–æ–≥–∏–Ω–∞
                            .formParam("login.y", "6")
                            .formParam("JSFormSubmit", "off")
                            .check(
                                    substring("User password was correct").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
                                    bodyString().saveAs("tempResponse_login_0") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("login_1")
                            .get("/cgi-bin/nav.pl?page=menu&in=home") // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                            .headers(headers_1)
                            .check(
                                    substring("Web Tours Navigation Bar").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–∞–Ω–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞
                                    bodyString().saveAs("tempResponse_login_1") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("login_2")
                            .get("/cgi-bin/login.pl?intro=true") // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
                            .headers(headers_1)
                            .check(
                                    substring("Welcome").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    bodyString().saveAs("tempResponse_login_2") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ —ç–º—É–ª–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º—É.
    // - feed(usersFeeder): –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ (username, password, firstName, lastName, address1, address2)
    //   –∏–∑ users.csv –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    // - exec(session -> ...): –°–æ–∑–¥–∞—ë—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é pass1 (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Jo Jo") –ø—É—Ç—ë–º –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ firstName –∏ lastName
    //   –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ –æ–ø–ª–∞—Ç—ã.
    // - login_0: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å —Å —Ñ–æ—Ä–º–æ–π –ª–æ–≥–∏–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è userSession –∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∏–¥–µ—Ä–∞.
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ —Ç–µ–∫—Å—Ç—É "User password was correct" –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_login_0.
    // - login_1: –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞, –ø—Ä–æ–≤–µ—Ä—è—è –µ—ë –Ω–∞–ª–∏—á–∏–µ ("Web Tours Navigation Bar"),
    //   —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_login_1.
    // - login_2: –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—è –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç–æ–º "Welcome", —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_login_2.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    //   - pass1: –ü–æ–ª–Ω–æ–µ –∏–º—è –ø–∞—Å—Å–∞–∂–∏—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Jo Jo") –¥–ª—è —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã.
    //   - username, password, firstName, lastName, address1, address2: –ò–∑ users.csv, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ login –∏ payment.
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–æ username –∏ password –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –ø–æ–∑–∂–µ –≤ logFlightSelection.

    // ‚úàÔ∏è –®–∞–≥ 3: –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∏—Å–∫—É —Ä–µ–π—Å–æ–≤
    public static ChainBuilder flights = group("Flights").on(
            exec(
                    http("flights_0")
                            .get("/cgi-bin/welcome.pl?page=search") // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–æ–≤
                            .headers(headers_0)
                            .resources(
                                    http("flights_1")
                                            .get("/cgi-bin/nav.pl?page=menu&in=flights") // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                                            .headers(headers_1),
                                    http("flights_2")
                                            .get("/cgi-bin/reservations.pl?page=welcome") // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
                                            .headers(headers_1)
                                            .check(
                                                    regex("<option value=\"([^\"]+)\">").findAll().saveAs("cityList"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
                                                    substring("Find Flight").exists() // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ñ–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                            )
                            )
            )
                    .exec(session -> {
                        // ‚öôÔ∏è –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–µ–π—Å–∞
                        String userSession = session.getString("userSession");
                        if (userSession == null) {
                            System.err.println("userSession is not defined or not found");
                            userSession = "defaultSession_" + System.nanoTime(); // –ó–∞–ø–∞—Å–Ω–æ–π ID —Å–µ—Å—Å–∏–∏
                        }

                        // üé≤ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ userSession
                        Random random = new Random(userSession.hashCode());

                        // üèôÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ —Å–µ—Å—Å–∏–∏
                        List<String> cities = session.get("cityList");
                        if (cities == null || cities.size() < 2) {
                            System.out.println("Not enough cities, using fallback list");
                            cities = Arrays.asList("Denver", "London", "Paris", "New York", "Tokyo", "Los Angeles", "Frankfurt", "Sydney", "Portland", "Seattle");
                        }

                        // üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
                        System.out.println("Collected cities: " + cities);

                        // üõ´ –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                        int departIndex = Math.abs(userSession.hashCode()) % cities.size();
                        String departCity = cities.get(departIndex);

                        // üõ¨ –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è (–Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≥–æ—Ä–æ–¥–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
                        int arrivalIndex = (Math.abs(userSession.hashCode() + 1)) % cities.size();
                        if (arrivalIndex == departIndex && cities.size() > 1) {
                            arrivalIndex = (arrivalIndex + 1) % cities.size();
                        }
                        String arrivalCity = cities.get(arrivalIndex);

                        // üìÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—Ç –≤—ã–ª–µ—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è
                        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                        Calendar calendar = Calendar.getInstance();
                        calendar.add(Calendar.DAY_OF_YEAR, random.nextInt(10) + 1);
                        String departDate = dateFormat.format(calendar.getTime());
                        calendar.add(Calendar.DAY_OF_YEAR, random.nextInt(5) + 1);
                        String returnDate = dateFormat.format(calendar.getTime());

                        // ü™ë –í—ã–±–æ—Ä –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ –º–µ—Å—Ç–∞–º –∏ –∫–ª–∞—Å—Å—É
                        List<String> seatPreferences = Arrays.asList("Aisle", "Window", "None");
                        List<String> seatTypes = Arrays.asList("First", "Business", "Coach");
                        String seatPref = seatPreferences.get(random.nextInt(seatPreferences.size()));
                        String seatType = seatTypes.get(random.nextInt(seatTypes.size()));

                        // üë• –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ (1‚Äì3)
                        int numPassengers = random.nextInt(3) + 1;
                        System.out.println("Generated numPassengers: " + numPassengers);

                        // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ —Å–µ—Å—Å–∏—é
                        return session
                                .set("departCity", departCity)
                                .set("arrivalCity", arrivalCity)
                                .set("departDate", departDate)
                                .set("returnDate", returnDate)
                                .set("seatPref", seatPref)
                                .set("seatType", seatType)
                                .set("numPassengers", String.valueOf(numPassengers));
                    })
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–æ–≤ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
    // - Flights_0: –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ (welcome.pl?page=search) —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π —Ä–µ—Å—É—Ä—Å–æ–≤.
    // - Flights_1: –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Ä–µ–π—Å–æ–≤.
    // - Flights_2: –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ä–º—É –ø–æ–∏—Å–∫–∞, –∏–∑–≤–ª–µ–∫–∞—è —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
    //   (<option value="...">) —Å –ø–æ–º–æ—â—å—é regex –∏ —Å–æ—Ö—Ä–∞–Ω—è—è –≤ cityList (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["Denver", "London", ...]).
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ "Find Flight" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã.
    // - –õ–æ–≥–∏–∫–∞ –≤ exec(session -> ...):
    //   - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ userSession, —Å–æ–∑–¥–∞–≤–∞—è –∑–∞–ø–∞—Å–Ω–æ–π ID, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.
    //   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Random —Å seed –Ω–∞ –æ—Å–Ω–æ–≤–µ userSession –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏.
    //   - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç cityList, –∏—Å–ø–æ–ª—å–∑—É—è –∑–∞–ø–∞—Å–Ω–æ–π —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤, –µ—Å–ª–∏ –æ–Ω –ø—É—Å—Ç –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω–µ–µ 2 –≥–æ—Ä–æ–¥–æ–≤.
    //   - –í—ã–±–∏—Ä–∞–µ—Ç –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (departCity) –∏ –ø—Ä–∏–±—ã—Ç–∏—è (arrivalCity), –∏–∑–±–µ–≥–∞—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.
    //   - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞ (departDate, —á–µ—Ä–µ–∑ 1‚Äì10 –¥–Ω–µ–π) –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è (returnDate, —á–µ—Ä–µ–∑ 1‚Äì5 –¥–Ω–µ–π –ø–æ—Å–ª–µ –≤—ã–ª–µ—Ç–∞).
    //   - –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –º–µ—Å—Ç–∞–º (seatPref), –∫–ª–∞—Å—Å—É (seatType) –∏ —á–∏—Å–ª—É –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ (numPassengers, 1‚Äì3).
    //   - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–µ—Å—Å–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    //   - cityList: –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["Denver", "London", ...]).
    //   - departCity, arrivalCity: –ì–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Sydney", "Zurich").
    //   - departDate, returnDate: –î–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ MM/dd/yyyy (–Ω–∞–ø—Ä–∏–º–µ—Ä, "04/25/2025", "04/28/2025").
    //   - seatPref: –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –º–µ—Å—Ç–∞ ("Aisle", "Window", "None").
    //   - seatType: –ö–ª–∞—Å—Å ("First", "Business", "Coach").
    //   - numPassengers: –ß–∏—Å–ª–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ (1‚Äì3).
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:
    //   - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤: "Collected cities: [Denver, London, ...]".
    //   - –í—ã–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤: "Generated numPassengers: 2".

    // üîç –®–∞–≥ 4: –ü–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤
    public static ChainBuilder findFlight = group("Find_Flight").on(
            exec(
                    http("find_flight_0")
                            .post("/cgi-bin/reservations.pl") // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–∞
                            .headers(headers_8)
                            .formParam("advanceDiscount", "0") // –ë–µ–∑ —Å–∫–∏–¥–∫–∏
                            .formParam("depart", "#{departCity}") // –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Å–µ—Å—Å–∏–∏
                            .formParam("departDate", "#{departDate}") // –î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞
                            .formParam("arrive", "#{arrivalCity}") // –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è
                            .formParam("returnDate", "#{returnDate}") // –î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è
                            .formParam("numPassengers", "#{numPassengers}") // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
                            .formParam("seatPref", "#{seatPref}") // –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –º–µ—Å—Ç—É
                            .formParam("seatType", "#{seatType}") // –ö–ª–∞—Å—Å
                            .formParam("findFlights.x", "46") // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–Ω–æ–ø–∫–∏
                            .formParam("findFlights.y", "11")
                            .check(
                                    regex("value=\"(\\d+;\\d+;\\d{2}/\\d{2}/\\d{4})\"").findAll().saveAs("outboundFlights"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Å–æ–≤
                        //            regex("from ([^ ]+) to").saveAs("paymentDepartCity"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                                    bodyString().saveAs("tempResponse_findFlight") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(session -> {
                // üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
                String response = session.getString("tempResponse_findFlight");
                List<String> outboundFlights = session.get("outboundFlights");
                System.out.println("Find Flight Response: " + response);
                System.out.println("Extracted outboundFlights: " + (outboundFlights != null ? outboundFlights : "null"));
                if (outboundFlights == null || outboundFlights.isEmpty()) {
                    System.err.println("Warning: No outbound flights extracted in findFlight");
                }
                return session;
            })
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —à–∞–≥–∞ flights.
    // - Find_Flight_0: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å —Å —Ñ–æ—Ä–º–æ–π –ø–æ–∏—Å–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å–µ—Å—Å–∏–∏ (departCity,
    //   arrivalCity, departDate, returnDate, numPassengers, seatPref, seatType).
    //   –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Å–æ–≤ (outboundFlights) –≤ —Ñ–æ—Ä–º–∞—Ç–µ "flightNumber;cost;date"
    //   (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["452;852;04/25/2025", "453;900;04/25/2025"]) —Å –ø–æ–º–æ—â—å—é regex.
    //   –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª–Ω—ã–π HTML-–æ—Ç–≤–µ—Ç –≤ tempResponse_findFlight –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    // - –õ–æ–≥–∏–∫–∞ –≤ exec(session -> ...):
    //   - –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (tempResponse_findFlight) –∏ —Å–ø–∏—Å–æ–∫ —Ä–µ–π—Å–æ–≤ (outboundFlights).
    //   - –í—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –∏ –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ —Ä–µ–π—Å—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    //   - –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ä–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    //   - outboundFlights: –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–π—Å–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["452;852;04/25/2025", ...]).
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:
    //   - –í—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: "Find Flight Response: <HTML>".
    //   - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–π—Å–æ–≤: "Extracted outboundFlights: [452;852;04/25/2025, ...]".
    //   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–π—Å–æ–≤: "Warning: No outbound flights extracted in findFlight".

    // üé´ –®–∞–≥ 5: –í—ã–±–æ—Ä —Ä–µ–π—Å–∞
    public static ChainBuilder flightSelection = group("Flight_Selection").on(
            exec(session -> {
                // ‚öôÔ∏è –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ–π—Å–∞ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
                List<String> outboundFlights = session.get("outboundFlights");
                if (outboundFlights == null || outboundFlights.isEmpty()) {
                    System.err.println("Error: No outbound flights found in session, skipping flight selection");
                    return session.set("randomFlight", "");
                }
                String randomFlight = outboundFlights.get(new Random().nextInt(outboundFlights.size()));
                System.out.println("Selected randomFlight: " + randomFlight);
                return session.set("randomFlight", randomFlight);
            }),
            doIf(session -> {
                // üîÑ –£—Å–ª–æ–≤–∏–µ: –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–µ–π—Å –≤—ã–±—Ä–∞–Ω
                String randomFlight = session.getString("randomFlight");
                return randomFlight != null && !randomFlight.isEmpty();
            }).then(
                    exec(
                            http("flight_selection_0")
                                    .post("/cgi-bin/reservations.pl") // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Å–∞
                                    .headers(headers_9)
                                    .formParam("outboundFlight", "#{randomFlight}") // –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π—Å
                                    .formParam("numPassengers", "#{numPassengers}") // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
                                    .formParam("advanceDiscount", "0") // –ë–µ–∑ —Å–∫–∏–¥–∫–∏
                                    .formParam("seatType", "#{seatType}") // –ö–ª–∞—Å—Å
                                    .formParam("seatPref", "#{seatPref}") // –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –º–µ—Å—Ç—É
                                    .formParam("reserveFlights.x", "43") // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–Ω–æ–ø–∫–∏
                                    .formParam("reserveFlights.y", "11")
                                    .check(
                                            regex("value=\"(\\d+;\\d+;\\d{2}/\\d{2}/\\d{4})\"").saveAs("returnedFlight"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω–æ–≥–æ —Ä–µ–π—Å–∞
                                            substring("Flight Reservation").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                            bodyString().saveAs("tempResponse_flightSelection") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                                    )
                    )
            )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–π—Å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –µ–≥–æ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ.
    // - –ü–µ—Ä–≤—ã–π exec(session -> ...):
    //   - –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–π—Å–æ–≤ (outboundFlights) –∏–∑ —Å–µ—Å—Å–∏–∏.
    //   - –ï—Å–ª–∏ —Ä–µ–π—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –ª–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç randomFlight –≤ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É.
    //   - –ò–Ω–∞—á–µ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–π—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "452;852;04/25/2025") –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ randomFlight.
    //   - –õ–æ–≥–∏—Ä—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π—Å: "Selected randomFlight: 452;852;04/25/2025".
    // - doIf: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ randomFlight –Ω–µ –ø—É—Å—Ç–æ–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–Ω—É–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.
    // - Flight_Selection_0: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å —Å —Ñ–æ—Ä–º–æ–π —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è randomFlight –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    //   –∏–∑ —Å–µ—Å—Å–∏–∏ (numPassengers, seatType, seatPref).
    //   –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π —Ä–µ–π—Å (returnedFlight) –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "452;852;04/25/2025").
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ "Flight Reservation" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
    //   –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_flightSelection.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    //   - randomFlight: –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "452;852;04/25/2025").
    //   - returnedFlight: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π —Ä–µ–π—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "452;852;04/25/2025").
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:
    //   - –í—ã–≤–æ–¥–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π—Å: "Selected randomFlight: 452;852;04/25/2025".
    //   - –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–π—Å–æ–≤: "Error: No outbound flights found in session, skipping flight selection".

    // üí≥ –®–∞–≥ 6: –û–ø–ª–∞—Ç–∞ –±–∏–ª–µ—Ç–∞
    public static ChainBuilder payment = group("Payment").on(
            doIf(session -> {
                // üîÑ –£—Å–ª–æ–≤–∏–µ: –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–µ–π—Å –≤—ã–±—Ä–∞–Ω
                String randomFlight = session.getString("randomFlight");
                return randomFlight != null && !randomFlight.isEmpty();
            }).then(
                    exec(session -> {
                        // ‚öôÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã
                        String creditCard = random.ints(16, 0, 10)
                                .mapToObj(String::valueOf)
                                .collect(Collectors.joining());
                        String month = String.format("%02d", random.nextInt(12) + 1);
                        String year = String.valueOf(random.nextInt(6) + 25);
                        String expDate = month + "/" + year;
                        return session
                                .set("creditCard", creditCard)
                                .set("expDate", expDate);
                    }),
                    exec(
                            http("payment_0")
                                    .post("/cgi-bin/reservations.pl") // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã
                                    .headers(headers_10)
                                    .formParam("firstName", "#{firstName}") // –ò–º—è –∏–∑ users.csv
                                    .formParam("lastName", "#{lastName}") // –§–∞–º–∏–ª–∏—è –∏–∑ users.csv
                                    .formParam("address1", "#{address1}") // –ê–¥—Ä–µ—Å 1 –∏–∑ users.csv
                                    .formParam("address2", "#{address2}") // –ê–¥—Ä–µ—Å 2 –∏–∑ users.csv
                                    .formParam("pass1", "#{pass1}") // –ü–æ–ª–Ω–æ–µ –∏–º—è –∏–∑ —à–∞–≥–∞ login
                                    .formParam("creditCard", "#{creditCard}") // –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã
                                    .formParam("expDate", "#{expDate}") // –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã
                                    .formParam("oldCCOption", "") // –ü—É—Å—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —Å—Ç–∞—Ä–æ–π –∫–∞—Ä—Ç—ã
                                    .formParam("numPassengers", "#{numPassengers}") // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
                                    .formParam("seatType", "#{seatType}") // –ö–ª–∞—Å—Å
                                    .formParam("seatPref", "#{seatPref}") // –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –º–µ—Å—Ç—É
                                    .formParam("outboundFlight", "#{randomFlight}") // –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π—Å
                                    .formParam("advanceDiscount", "0") // –ë–µ–∑ —Å–∫–∏–¥–∫–∏
                                    .formParam("returnFlight", "") // –ù–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ–≥–æ —Ä–µ–π—Å–∞
                                    .formParam("JSFormSubmit", "off")
                                    .formParam("buyFlights.x", "30") // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–Ω–æ–ø–∫–∏
                                    .formParam("buyFlights.y", "12")
                                    .formParam(".cgifields", "saveCC") // –ü–æ–ª–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
                                    .check(
                                            substring("Thank you for booking").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–∫—É–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
                                            regex("Flight (\\d+)").saveAs("paymentFlight"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ä–µ–π—Å–∞
                                            regex("from (.+?) to").saveAs("paymentDepartCity"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                                            regex("to ([^<.]+)").saveAs("paymentArrivalCity"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è
                                            bodyString().saveAs("tempResponse_payment") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                                    )
                    ),
                    exec(session -> {
                        // üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
                        String response = session.getString("tempResponse_payment");
               //         System.out.println("Payment Response: " + response);
                        return session;
                    })
            )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–æ–∫—É–ø–∫—É –±–∏–ª–µ—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è—è –¥–∞–Ω–Ω—ã–µ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –∏ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã.
    // - doIf: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ randomFlight –Ω–µ –ø—É—Å—Ç–æ–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–Ω—É–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.
    // - –ü–µ—Ä–≤—ã–π exec(session -> ...):
    //   - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π 16-–∑–Ω–∞—á–Ω—ã–π –Ω–æ–º–µ—Ä –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã (creditCard, –Ω–∞–ø—Ä–∏–º–µ—Ä, "1234567890123456").
    //   - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã (expDate, –Ω–∞–ø—Ä–∏–º–µ—Ä, "04/27") —Å –º–µ—Å—è—Ü–µ–º (01‚Äì12) –∏ –≥–æ–¥–æ–º (25‚Äì30).
    //   - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç creditCard –∏ expDate –≤ —Å–µ—Å—Å–∏—é.
    // - Payment_0: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å —Å —Ñ–æ—Ä–º–æ–π –æ–ø–ª–∞—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ users.csv (firstName,
    //   lastName, address1, address2), pass1 –∏–∑ —à–∞–≥–∞ login, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ creditCard –∏ expDate,
    //   –∞ —Ç–∞–∫–∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å–µ—Å—Å–∏–∏ (numPassengers, seatType, seatPref, randomFlight).
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ —Ç–µ–∫—Å—Ç–æ–º "Thank you for booking".
    //   –ò–∑–≤–ª–µ–∫–∞–µ—Ç:
    //     - –ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ (paymentFlight, –Ω–∞–ø—Ä–∏–º–µ—Ä, "452") —Å –ø–æ–º–æ—â—å—é regex "Flight (\\d+)".
    //     - –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (paymentDepartCity, –Ω–∞–ø—Ä–∏–º–µ—Ä, "Sydney") —Å –ø–æ–º–æ—â—å—é regex "from ([^ ]+) to".
    //     - –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è (paymentArrivalCity, –Ω–∞–ø—Ä–∏–º–µ—Ä, "Zurich") —Å –ø–æ–º–æ—â—å—é regex "to ([^<.]+)".
    //   –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_payment.
    // - –í—Ç–æ—Ä–æ–π exec(session -> ...): –í—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    //   - creditCard: –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "1234567890123456").
    //   - expDate: –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "04/27").
    //   - paymentFlight: –ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "452").
    //   - paymentDepartCity: –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Sydney").
    //   - paymentArrivalCity: –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Zurich").
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:
    //   - –í—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: "Payment Response: <HTML>".

    // üóìÔ∏è –®–∞–≥ 7: –ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞—Ä—à—Ä—É—Ç–∞
    public static ChainBuilder itinerary = group("Itinerary").on(
            exec(
                    http("itinerary_0")
                            .get("/cgi-bin/welcome.pl?page=itinerary") // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞—Ä—à—Ä—É—Ç–∞
                            .headers(headers_0)
                            .check(
                                    substring("already logged").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
                                    bodyString().saveAs("tempResponse_itinerary0") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("itinerary_1")
                            .get("/cgi-bin/nav.pl?page=menu&in=itinerary") // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                            .headers(headers_1)
                            .check(
                                    substring("Itinerary").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–∞–Ω–µ–ª—å –º–∞—Ä—à—Ä—É—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    bodyString().saveAs("tempResponse_itinerary1") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("itinerary_2")
                            .get("/cgi-bin/itinerary.pl") // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
                            .headers(headers_1)
                            .check(
                                    substring("Flights List").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å–ø–∏—Å–æ–∫ —Ä–µ–π—Å–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω
                                    bodyString().saveAs("tempResponse_itinerary2") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("itinerary_3")
                            .get("/WebTours/images/cancelreservation.gif") // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
                            .headers(headers_14)
                            .check(
                                    bodyBytes().saveAs("tempResponse_itinerary3") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("itinerary_4")
                            .get("/WebTours/images/cancelallreservations.gif") // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –æ—Ç–º–µ–Ω—ã
                            .headers(headers_14)
                            .check(
                                    bodyBytes().saveAs("tempResponse_itinerary4") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ —ç–º—É–ª–∏—Ä—É–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞.
    // - Itinerary_0: –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞—Ä—à—Ä—É—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    //   (—Ç–µ–∫—Å—Ç "already logged"), —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_itinerary1.
    // - Itinerary_1: –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –º–∞—Ä—à—Ä—É—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è—è —Ç–µ–∫—Å—Ç "Itinerary",
    //   —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_itinerary2.
    // - Itinerary_2: –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, –ø—Ä–æ–≤–µ—Ä—è—è —Ç–µ–∫—Å—Ç "Flights List",
    //   —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_itinerary3.
    // - Itinerary_3, Itinerary_4: –ó–∞–≥—Ä—É–∂–∞—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è,
    //   —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∏—Ö –≤ tempResponse_itinerary4 –∏ tempResponse_itinerary5 –∫–∞–∫ –±–∞–π—Ç—ã.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    //   - tempResponse_itinerary1, tempResponse_itinerary2, tempResponse_itinerary3: HTML-–æ—Ç–≤–µ—Ç—ã.
    //   - tempResponse_itinerary4, tempResponse_itinerary5: –ë–∞–π—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.

    // üîì –®–∞–≥ 8: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    public static ChainBuilder logout = group("Logout").on(
            exec(
                    http("logout_0")
                            .get("/cgi-bin/welcome.pl?signOff=1") // –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã—Ö–æ–¥
                            .headers(headers_0)
                            .check(
                                    substring("Session ID has been created").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                                    bodyString().saveAs("tempResponse_logout1") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("logout_1")
                            .get("/cgi-bin/nav.pl?in=home") // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                            .headers(headers_1)
                            .check(
                                    substring("Web Tours Navigation Bar").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    regex("<input type=\"hidden\" name=\"userSession\" value=\"(.+?)\"").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞
                                    bodyString().saveAs("tempResponse_logout2") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ —ç–º—É–ª–∏—Ä—É–µ—Ç –≤—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
    // - Logout_0: –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Å–µ—Å—Å–∏—é (signOff=1), –≤–æ–∑–≤—Ä–∞—â–∞—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç "Web Tours" –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_logout1.
    // - Logout_1: –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å, –ø—Ä–æ–≤–µ—Ä—è—è –µ—ë –Ω–∞–ª–∏—á–∏–µ ("Web Tours Navigation Bar")
    //   –∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ userSession –≤ —Å–∫—Ä—ã—Ç–æ–º –ø–æ–ª–µ —Ñ–æ—Ä–º—ã.
    //   –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_logout2.
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    //   - tempResponse_logout1, tempResponse_logout2: HTML-–æ—Ç–≤–µ—Ç—ã.
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.

    // üìú –®–∞–≥ 9: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Å–∞
    public static ChainBuilder logFlightSelection = group("Log_Flight_Selection").on(
            exec(session -> {
                // ‚öôÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                String username = session.getString("username");
                String password = session.getString("password");
                String randomFlight = session.getString("randomFlight");
                String returnedFlight = session.getString("returnedFlight");
                String paymentFlight = session.getString("paymentFlight");
                String paymentDepartCity = session.getString("paymentDepartCity");
                String paymentArrivalCity = session.getString("paymentArrivalCity");
                String departCity = session.getString("departCity");
                String arrivalCity = session.getString("arrivalCity");

                // üîç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ä–µ–π—Å–∞ –∏–∑ randomFlight
                String randomFlightNumber = randomFlight != null && randomFlight.contains(";") ? randomFlight.split(";")[0] : randomFlight;

                // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–π—Å–æ–≤
                boolean flightMatch = randomFlight != null && !randomFlight.isEmpty() && randomFlight.equals(returnedFlight);
                boolean paymentFlightMatch = randomFlightNumber != null && paymentFlight != null && randomFlightNumber.equals(paymentFlight);
                boolean citiesMatch = paymentDepartCity != null && paymentArrivalCity != null &&
                        paymentDepartCity.equals(departCity) && paymentArrivalCity.equals(arrivalCity);

                // üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                System.out.println("User Credentials: username=" + username + ", password=" + password);
                System.out.println("Selected Flight: " + randomFlight);
                System.out.println("Returned Flight: " + returnedFlight);
                System.out.println("Flight Match: " + (flightMatch ? "SUCCESS" : "FAILURE"));
                System.out.println("Payment Flight: " + paymentFlight);
                System.out.println("Payment Flight Match: " + (paymentFlightMatch ? "SUCCESS" : "FAILURE"));
                System.out.println("Payment Depart City: " + paymentDepartCity);
                System.out.println("Payment Arrival City: " + paymentArrivalCity);
                System.out.println("Cities Match: " + (citiesMatch ? "SUCCESS" : "FAILURE"));

                return session;
            })
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –ª–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–±–æ—Ä–∞ –∏ –æ–ø–ª–∞—Ç—ã —Ä–µ–π—Å–∞, –ø—Ä–æ–≤–µ—Ä—è—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.
    // - –õ–æ–≥–∏–∫–∞ –≤ exec(session -> ...):
    //   - –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ —Å–µ—Å—Å–∏–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (username, password), —Ä–µ–π—Å—ã (randomFlight,
    //     returnedFlight, paymentFlight), –≥–æ—Ä–æ–¥–∞ (paymentDepartCity, paymentArrivalCity,
    //     departCity, arrivalCity).
    //   - –ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–æ–º–µ—Ä —Ä–µ–π—Å–∞ (randomFlightNumber) –∏–∑ randomFlight, –æ—Ç–¥–µ–ª—è—è –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å –¥–æ ";"
    //     (–Ω–∞–ø—Ä–∏–º–µ—Ä, "452" –∏–∑ "452;852;04/25/2025").
    //   - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
    //     - flightMatch: –°–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ randomFlight –∏ returnedFlight (–≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π —Ä–µ–π—Å—ã).
    //     - paymentFlightMatch: –°–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –Ω–æ–º–µ—Ä —Ä–µ–π—Å–∞ (randomFlightNumber) —Å paymentFlight.
    //     - citiesMatch: –°–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ –≥–æ—Ä–æ–¥–∞ (paymentDepartCity —Å departCity, paymentArrivalCity —Å arrivalCity).
    //   - –í—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥:
    //     - –£—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: "User Credentials: username=jojo, password=bean".
    //     - –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π—Å: "Selected Flight: 452;852;04/25/2025".
    //     - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π —Ä–µ–π—Å: "Returned Flight: 452;852;04/25/2025".
    //     - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–π—Å–æ–≤: "Flight Match: SUCCESS" –∏–ª–∏ "FAILURE".
    //     - –ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ: "Payment Flight: 452".
    //     - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ä–µ–π—Å–∞: "Payment Flight Match: SUCCESS" –∏–ª–∏ "FAILURE".
    //     - –ì–æ—Ä–æ–¥–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ: "Payment Depart City: Sydney", "Payment Arrival City: Zurich".
    //     - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ä–æ–¥–æ–≤: "Cities Match: SUCCESS" –∏–ª–∏ "FAILURE".
    // - –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: –ù–µ—Ç –Ω–æ–≤—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑ —Å–µ—Å—Å–∏–∏.
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–æ–∫.

    // üìã –°—Ü–µ–Ω–∞—Ä–∏–π: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —à–∞–≥–æ–≤ —Å –ø–∞—É–∑–∞–º–∏ –∏ –ø–µ–π—Å–∏–Ω–≥–æ–º
    public static ScenarioBuilder scn = scenario("UC3_Buy_ticket")
            .pace(Duration.ofSeconds(30)) // ‚è≤Ô∏è –ü–µ–π—Å–∏–Ω–≥: –∫–∞–∂–¥—ã–π —Ü–∏–∫–ª –∑–∞–Ω–∏–º–∞–µ—Ç —Ä–æ–≤–Ω–æ 30 —Å–µ–∫—É–Ω–¥
            .exec(homePage) // –®–∞–≥ 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
            .exec(login) // –®–∞–≥ 2: –í—Ö–æ–¥
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(flights) // –®–∞–≥ 3: –ü–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(findFlight) // –®–∞–≥ 4: –í—ã–±–æ—Ä —Ä–µ–π—Å–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(flightSelection) // –®–∞–≥ 5: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–π—Å–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(payment) // –®–∞–≥ 6: –û–ø–ª–∞—Ç–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(itinerary) // –®–∞–≥ 7: –ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞—Ä—à—Ä—É—Ç–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(logout) // –®–∞–≥ 8: –í—ã—Ö–æ–¥
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(logFlightSelection); // –®–∞–≥ 9: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

// üìù –û–ø–∏—Å–∞–Ω–∏–µ:
// - –°—Ü–µ–Ω–∞—Ä–∏–π: –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–∞ (UC3_Buy_ticket) —Å —à–∞–≥–∞–º–∏ –æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
// - –ü–µ–π—Å–∏–Ω–≥: –ö–∞–∂–¥—ã–π —Ü–∏–∫–ª —Å—Ü–µ–Ω–∞—Ä–∏—è –∑–∞–Ω–∏–º–∞–µ—Ç —Ä–æ–≤–Ω–æ 30 —Å–µ–∫—É–Ω–¥ (pace), –¥–æ–±–∞–≤–ª—è—è –ø–∞—É–∑—É, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Ä–∞–Ω—å—à–µ.
// - –ü–∞—É–∑—ã: –ú–µ–∂–¥—É —à–∞–≥–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—É–∑—ã –ø–æ 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.


    // ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏: 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ 5 —Å–µ–∫—É–Ω–¥—É
    public static final int USER_COUNT = 10;
    public static final Duration TEST_DURATION = Duration.ofSeconds(10);

    {
        // üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª–∞
        setUp(
                scn.injectClosed(
                        constantConcurrentUsers(USER_COUNT).during(TEST_DURATION)
                )
        ).protocols(httpProtocol);
    }

// üìù –û–ø–∏—Å–∞–Ω–∏–µ:
// - –ú–æ–¥–µ–ª—å –Ω–∞–≥—Ä—É–∑–∫–∏: –ó–∞–∫—Ä—ã—Ç–∞—è (injectClosed), –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
// - –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥—ã (constantConcurrentUsers).
// - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è 5 —Å–µ–∫—É–Ω–¥—É (during).
// - –ü—Ä–æ—Ç–æ–∫–æ–ª: –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HTTP (httpProtocol).

}




    // ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≥—Ä—É–∑–∫–∏: 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–µ–∫—É–Ω–¥—É, 1 —Å–µ–∫—É–Ω–¥–∞
//    public static static final int USER_COUNT = 10;
//    public static static final Duration TEST_DURATION = Duration.ofSeconds(1);

    //   {
        // üöÄ –ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª–∞
    //       setUp(
    //              scn.injectOpen(
    //                  constantUsersPerSec(USER_COUNT).during(TEST_DURATION)
    //          )
    //    ).protocols(httpProtocol);
    // }
    // –û–ø–∏—Å–∞–Ω–∏–µ: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞.
    // - constantUsersPerSec(1): –ó–∞–ø—É—Å–∫–∞–µ—Ç 1 –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É.
    // - during(1): –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞ ‚Äî 1 —Å–µ–∫—É–Ω–¥–∞, —á—Ç–æ —Å–æ–∑–¥–∞—ë—Ç 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    // - injectOpen: –ú–æ–¥–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö.
    // - protocols(httpProtocol): –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HTTP –∫–æ –≤—Å–µ–º –∑–∞–ø—Ä–æ—Å–∞–º.
