package io.gatling.demo;

import java.time.Duration;
import java.util.*;
import io.gatling.core.Predef.*;
import io.gatling.http.Predef.*;
import io.gatling.javaapi.core.*;
import io.gatling.javaapi.http.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random;
import java.util.Arrays;

import static io.gatling.javaapi.core.CoreDsl.*;
import static io.gatling.javaapi.http.HttpDsl.*;

// üìú –°—Ü–µ–Ω–∞—Ä–∏–π –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Web Tours: –≤—Ö–æ–¥, –ø–æ–∏—Å–∫ —Ä–µ–π—Å–∞, –≤—ã–±–æ—Ä –±–∏–ª–µ—Ç–∞, –≤—ã—Ö–æ–¥
public class UC2_Search extends Simulation {

    // üóÇÔ∏è –§–∏–¥–µ—Ä: —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ —Ä–∞–∑–¥–∞—ë—Ç 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ users.csv (username, password)
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç .circular() –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
    private static final FeederBuilder<String> usersFeeder = csv("users.csv").circular();
    // –û–ø–∏—Å–∞–Ω–∏–µ: –§–∏–¥–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ—Ç —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ users.csv (src/test/resources) –∏ —Ä–∞–∑–¥–∞—ë—Ç –∏—Ö
    // –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ –∫—Ä—É–≥—É. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ
    // (–¥–æ ~100 —Ä–∞–∑), –∏–∑–±–µ–≥–∞—è –æ—à–∏–±–∫–∏ "Feeder is now empty". –ö–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è username –∏ password.

    // üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª–∞: –±–∞–∑–æ–≤—ã–π URL, –∑–∞–≥–æ–ª–æ–≤–∫–∏, –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
    private HttpProtocolBuilder httpProtocol = http
            .baseUrl("http://localhost:1080") // –ë–∞–∑–æ–≤—ã–π URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Web Tours
            .inferHtmlResources() // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ (CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
            .acceptHeader("text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8") // –§–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
            .acceptEncodingHeader("gzip, deflate, br") // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∂–∞—Ç–∏—è
            .acceptLanguageHeader("ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3") // –Ø–∑—ã–∫–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            .upgradeInsecureRequestsHeader("1") // –†–∞–∑—Ä–µ—à–∏—Ç—å –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
            .userAgentHeader("Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:137.0) Gecko/20100101 Firefox/137.0"); // –≠–º—É–ª—è—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ Firefox
    // –û–ø–∏—Å–∞–Ω–∏–µ: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤, —ç–º—É–ª–∏—Ä—É—è –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Web Tours.

    // üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
    private Map<CharSequence, String> headers_0 = Map.ofEntries(
            Map.entry("Priority", "u=0, i"),
            Map.entry("Sec-Fetch-Dest", "document"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1")
    ); // –î–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –≤—ã—Ö–æ–¥–∞
    private Map<CharSequence, String> headers_1 = Map.ofEntries(
            Map.entry("Priority", "u=4"),
            Map.entry("Sec-Fetch-Dest", "frame"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin")
    ); // –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ—Ä–µ–π–º–æ–≤
    private Map<CharSequence, String> headers_2 = Map.ofEntries(
            Map.entry("Origin", "http://localhost:1080"),
            Map.entry("Priority", "u=0, i"),
            Map.entry("Sec-Fetch-Dest", "document"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1")
    ); // –î–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞ –ª–æ–≥–∏–Ω–∞
    private Map<CharSequence, String> headers_8 = Map.ofEntries(
            Map.entry("Content-Type", "multipart/form-data; boundary=----geckoformboundary33c32868ece214ee22af976902a2b211"),
            Map.entry("Origin", "http://localhost:1080"),
            Map.entry("Priority", "u=4"),
            Map.entry("Sec-Fetch-Dest", "frame"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1")
    ); // –î–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–∞
    private Map<CharSequence, String> headers_9 = Map.ofEntries(
            Map.entry("Content-Type", "multipart/form-data; boundary=----geckoformboundary1d0b7362baab283a3d5c76f9fd1b6a8a"),
            Map.entry("Origin", "http://localhost:1080"),
            Map.entry("Priority", "u=4"),
            Map.entry("Sec-Fetch-Dest", "frame"),
            Map.entry("Sec-Fetch-Mode", "navigate"),
            Map.entry("Sec-Fetch-Site", "same-origin"),
            Map.entry("Sec-Fetch-User", "?1")
    ); // –î–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Å–∞
    // –û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞–±–æ—Ä—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —ç–º—É–ª–∏—Ä—É—é—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ (GET/POST, —Ñ—Ä–µ–π–º—ã, —Ñ–æ—Ä–º—ã).
    // –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∞–ª—å–Ω—ã–º HTTP-–∑–∞–ø—Ä–æ—Å–∞–º, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–º Web Tours.

    // üè† –®–∞–≥ 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    private ChainBuilder homePage = group("Home_Page").on(
            exec(
                    http("Home_Page_0")
                            .get("/cgi-bin/welcome.pl?signOff=1") // –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –≤—ã—Ö–æ–¥–∞
                            .headers(headers_0)
                            .check(substring("A Session ID has been created")) // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞
                            .check(substring("Web Tours")) // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Web Tours –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                            .check(bodyString().saveAs("tempResponse_0")) // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            )
                    .exec(
                            http("Home_Page_1")
                                    .get("/cgi-bin/nav.pl?in=home") // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                                    .headers(headers_1)
                                    .check(regex("name=\"userSession\" value=\"(.+?)\"").saveAs("userSession")) // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ userSession
                                    .check(substring("Web Tours Navigation Bar")) // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    .check(bodyString().saveAs("tempResponse_1")) // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ —ç–º—É–ª–∏—Ä—É–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã Web Tours.
    // - –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (Home_Page_0) –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –∏ –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    // - –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (Home_Page_1) –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç userSession (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Å–µ—Å—Å–∏–∏)
    //   —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. userSession —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ —Å–µ—Å—Å–∏–∏ Gatling –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö.
    // - –û—Ç–≤–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ tempResponse_0 –∏ tempResponse_1 –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏.

    // üîê –®–∞–≥ 2: –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
    private ChainBuilder loginStep = group("Login").on(
            exec(
                    feed(usersFeeder), // üóÇÔ∏è –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –∏–∑ users.csv
                    http("login1")
                            .post("/cgi-bin/login.pl") // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –ª–æ–≥–∏–Ω–∞
                            .headers(headers_2)
                            .formParam("userSession", "#{userSession}") // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ userSession
                            .formParam("username", "#{username}") // –õ–æ–≥–∏–Ω –∏–∑ —Ñ–∏–¥–µ—Ä–∞
                            .formParam("password", "#{password}") // –ü–∞—Ä–æ–ª—å –∏–∑ —Ñ–∏–¥–µ—Ä–∞
                            .formParam("login.x", "0")
                            .formParam("login.y", "0")
                            .formParam("JSFormSubmit", "off")
                            .check(substring("User password was correct")) // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ª–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω
                            .check(bodyString().saveAs("tempResponse_login1")) // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
            )
                    .exec(
                            http("login2")
                                    .get("/cgi-bin/nav.pl?page=menu&in=home") // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                                    .headers(headers_1)
                                    .check(substring("Web Tours Navigation Bar")) // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–∞–Ω–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞
                                    .check(bodyString().saveAs("tempResponse_login2")) // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                    )
                    .exec(
                            http("login3")
                                    .get("/cgi-bin/login.pl?intro=true") // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
                                    .headers(headers_1)
                                    .check(substring("Welcome")) // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    .check(bodyString().saveAs("tempResponse_login3")) // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                    )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ —ç–º—É–ª–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º—É.
    // - feed(usersFeeder): –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç username –∏ password –∏–∑ users.csv –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    // - login1: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å —Å —Ñ–æ—Ä–º–æ–π –ª–æ–≥–∏–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è userSession –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ –∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∏–¥–µ—Ä–∞.
    //   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –ø–æ –Ω–∞–ª–∏—á–∏—é —Ç–µ–∫—Å—Ç–∞ "User password was correct".
    // - login2: –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞, –ø—Ä–æ–≤–µ—Ä—è—è –µ—ë –Ω–∞–ª–∏—á–∏–µ.
    // - login3: –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—è —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥.
    // - –í—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (tempResponse_loginX).

    // ‚úàÔ∏è –®–∞–≥ 3: –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∏—Å–∫—É —Ä–µ–π—Å–æ–≤
    private ChainBuilder flights = group("Flights").on(
            exec(
                    http("Search Flights Page")
                            .get("/cgi-bin/welcome.pl?page=search") // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–æ–≤
                            .headers(headers_0)
                            .resources(
                                    http("Nav Flights")
                                            .get("/cgi-bin/nav.pl?page=menu&in=flights") // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                                            .headers(headers_1),
                                    http("Reservations Welcome")
                                            .get("/cgi-bin/reservations.pl?page=welcome") // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
                                            .headers(headers_1)
                                            .check(
                                                    regex("<option value=\"([^\"]+)\">").findAll().saveAs("cityList"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
                                                    substring("Find Flight").exists() // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ñ–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                            )
                            )
            )
                    .exec(session -> {
                        // ‚öôÔ∏è –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–µ–π—Å–∞
                        String userSession = session.getString("userSession");
                        if (userSession == null) {
                            System.err.println("userSession is not defined or not found");
                            userSession = "defaultSession_" + System.nanoTime(); // –ó–∞–ø–∞—Å–Ω–æ–π ID —Å–µ—Å—Å–∏–∏
                        }

                        // üé≤ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ userSession
                        Random random = new Random(userSession.hashCode());

                        // üèôÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ —Å–µ—Å—Å–∏–∏
                        List<String> cities = session.get("cityList");
                        if (cities == null || cities.size() < 2) {
                            System.out.println("Not enough cities, using fallback list");
                            cities = Arrays.asList("Denver", "London", "Paris", "New York", "Tokyo", "Los Angeles", "Frankfurt", "Sydney", "Portland", "Seattle");
                        }

                        // üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
                        System.out.println("Collected cities: " + cities);

                        // üõ´ –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                        int departIndex = Math.abs(userSession.hashCode()) % cities.size();
                        String departCity = cities.get(departIndex);

                        // üõ¨ –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è (–Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≥–æ—Ä–æ–¥–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
                        int arrivalIndex = (Math.abs(userSession.hashCode() + 1)) % cities.size();
                        if (arrivalIndex == departIndex && cities.size() > 1) {
                            arrivalIndex = (arrivalIndex + 1) % cities.size();
                        }
                        String arrivalCity = cities.get(arrivalIndex);

                        // üìÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—Ç –≤—ã–ª–µ—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è
                        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                        Calendar calendar = Calendar.getInstance();
                        calendar.add(Calendar.DAY_OF_YEAR, random.nextInt(10) + 1);
                        String departDate = dateFormat.format(calendar.getTime());
                        calendar.add(Calendar.DAY_OF_YEAR, random.nextInt(5) + 1);
                        String returnDate = dateFormat.format(calendar.getTime());

                        // ü™ë –í—ã–±–æ—Ä –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ –º–µ—Å—Ç–∞–º –∏ –∫–ª–∞—Å—Å—É
                        List<String> seatPreferences = Arrays.asList("Aisle", "Window", "None");
                        List<String> seatTypes = Arrays.asList("First", "Business", "Coach");
                        String seatPref = seatPreferences.get(random.nextInt(seatPreferences.size()));
                        String seatType = seatTypes.get(random.nextInt(seatTypes.size()));

                        // üë• –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ (1‚Äì3)
                        int numPassengers = random.nextInt(3) + 1;
                        System.out.println("Generated numPassengers: " + numPassengers);

                        // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ —Å–µ—Å—Å–∏—é
                        return session
                                .set("departCity", departCity)
                                .set("arrivalCity", arrivalCity)
                                .set("departDate", departDate)
                                .set("returnDate", returnDate)
                                .set("seatPref", seatPref)
                                .set("seatType", seatType)
                                .set("numPassengers", String.valueOf(numPassengers));
                    })
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–æ–≤ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
    // - –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã (–Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å –∏ —Ñ–æ—Ä–º–∞).
    // - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ (<option value="...">) —Å –ø–æ–º–æ—â—å—é regex –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ cityList.
    // - –õ–æ–≥–∏–∫–∞ –≤ exec(session -> ...):
    //   - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ userSession, —Å–æ–∑–¥–∞–≤–∞—è –∑–∞–ø–∞—Å–Ω–æ–π ID, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.
    //   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Random —Å seed –Ω–∞ –æ—Å–Ω–æ–≤–µ userSession –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏.
    //   - –í—ã–±–∏—Ä–∞–µ—Ç –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è –∏–∑ cityList, –∏–∑–±–µ–≥–∞—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.
    //   - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞ (—á–µ—Ä–µ–∑ 1‚Äì10 –¥–Ω–µ–π) –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è (—á–µ—Ä–µ–∑ 1‚Äì5 –¥–Ω–µ–π –ø–æ—Å–ª–µ –≤—ã–ª–µ—Ç–∞).
    //   - –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –º–µ—Å—Ç–∞–º, –∫–ª–∞—Å—Å—É –∏ —á–∏—Å–ª—É –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ (1‚Äì3).
    //   - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–µ—Å—Å–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ.

    // üîç –®–∞–≥ 4: –ü–æ–∏—Å–∫ —Ä–µ–π—Å–∞
    private ChainBuilder findFlight = group("Find_Flight").on(
            exec(
                    http("Find Flight Request")
                            .post("/cgi-bin/reservations.pl") // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–∞
                            .headers(headers_8)
                            .formParam("advanceDiscount", "0")
                            .formParam("depart", "#{departCity}") // –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Å–µ—Å—Å–∏–∏
                            .formParam("departDate", "#{departDate}") // –î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞
                            .formParam("arrive", "#{arrivalCity}") // –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è
                            .formParam("returnDate", "#{returnDate}") // –î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è
                            .formParam("numPassengers", "#{numPassengers}") // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
                            .formParam("seatPref", "#{seatPref}") // –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –º–µ—Å—Ç—É
                            .formParam("seatType", "#{seatType}") // –ö–ª–∞—Å—Å
                            .formParam("findFlights.x", "56")
                            .formParam("findFlights.y", "12")
                            .formParam(".cgifields", "roundtrip")
                            .formParam(".cgifields", "seatPref")
                            .formParam(".cgifields", "seatType")
                            .check(
                                    regex("name=\"outboundFlight\" value=\"([^\"]+)\">").findAll().saveAs("outboundFlight"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Å–æ–≤
                                    substring("outboundFlight").exists() // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ä–µ–π—Å—ã –Ω–∞–π–¥–µ–Ω—ã
                            )
            )
                    .exec(session -> {
                        // ‚öôÔ∏è –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ–π—Å–∞ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
                        List<String> flights = session.get("outboundFlight");
                        String randomFlight;

                        if (flights != null && !flights.isEmpty()) {
                            Random random = new Random();
                            randomFlight = flights.get(random.nextInt(flights.size()));
                            System.out.println("Selected randomFlight: " + randomFlight);
                        } else {
                            randomFlight = "Not Found";
                            System.err.println("No outbound flights found");
                        }

                        // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–π—Å–∞ –≤ —Å–µ—Å—Å–∏—é
                        return session.set("randomFlight", randomFlight);
                    })
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ä–µ–π—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞.
    // - POST-–∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ —Å–µ—Å—Å–∏–∏ (–≥–æ—Ä–æ–¥–∞, –¥–∞—Ç—ã, –º–µ—Å—Ç–∞, –∫–ª–∞—Å—Å, –ø–∞—Å—Å–∞–∂–∏—Ä—ã).
    // - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–π—Å—ã (outboundFlight) —Å –ø–æ–º–æ—â—å—é regex –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ —Å–ø–∏—Å–æ–∫ outboundFlight.
    // - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ä–µ–π—Å–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ (substring("outboundFlight")).
    // - –õ–æ–≥–∏–∫–∞ –≤ exec(session -> ...):
    //   - –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–π—Å–æ–≤ –∏–∑ —Å–µ—Å—Å–∏–∏.
    //   - –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–∏–Ω —Ä–µ–π—Å (randomFlight) –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç "Not Found", –µ—Å–ª–∏ —Ä–µ–π—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.
    //   - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç randomFlight –≤ —Å–µ—Å—Å–∏—é –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞.
    // - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–π—Å–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.

    // üéüÔ∏è –®–∞–≥ 5: –í—ã–±–æ—Ä —Ä–µ–π—Å–∞
    private ChainBuilder flightSelection = group("Flight_Selection").on(
            exec(
                    http("Flight Selection Request")
                            .post("/cgi-bin/reservations.pl") // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Å–∞
                            .headers(headers_9)
                            .formParam("outboundFlight", "#{randomFlight}") // –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–π—Å
                            .formParam("numPassengers", "#{numPassengers}") // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
                            .formParam("advanceDiscount", "0")
                            .formParam("seatType", "#{seatType}") // –ö–ª–∞—Å—Å
                            .formParam("seatPref", "#{seatPref}") // –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –º–µ—Å—Ç—É
                            .formParam("reserveFlights.x", "55")
                            .formParam("reserveFlights.y", "6")
                            .check(
                                    substring("Flight Reservation").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    substring("Payment Details").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥–∞–Ω–Ω—ã–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
                                    regex("name=\"outboundFlight\" value=\"([^\"]+)\"").saveAs("returnedFlight"), // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω–æ–≥–æ —Ä–µ–π—Å–∞
                                    bodyString().saveAs("tempResponse_flightSelection") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            )
                    .exec(session -> {
                        // üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Å–∞
                        String departCity = session.getString("departCity");
                        String arrivalCity = session.getString("arrivalCity");
                        String username = session.getString("username");
                        String password = session.getString("password");
                        String selectedFlight = session.getString("randomFlight");
                        String returnedFlight = session.getString("returnedFlight");
                        String response = session.getString("tempResponse_flightSelection");
                        boolean flightMatch = selectedFlight != null && selectedFlight.equals(returnedFlight);

                        System.out.println("Flight Route: " + departCity + " to " + arrivalCity);
                        System.out.println("User Credentials: username=" + username + ", password=" + password);
                        System.out.println("Selected Flight: " + selectedFlight);
                        System.out.println("Returned Flight from Server: " + returnedFlight);
                        System.out.println("Flight Match: " + (flightMatch ? "SUCCESS" : "FAILURE"));
                        System.out.println("Flight Selection Response: " + response);

                        return session;
                    })
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–π—Å–∞ –∏ –ª–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
    // - POST-–∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º—É —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–π—Å–æ–º (randomFlight) –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ —Å–µ—Å—Å–∏–∏.
    // - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:
    //   - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ("Flight Reservation").
    //   - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–ø–ª–∞—Ç—ã ("Payment Details").
    //   - –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π —Ä–µ–π—Å (returnedFlight) —Å –ø–æ–º–æ—â—å—é regex –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Å–µ—Å—Å–∏—é.
    // - –õ–æ–≥–∏–∫–∞ –≤ exec(session -> ...):
    //   - –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ —Å–µ—Å—Å–∏–∏ –≥–æ—Ä–æ–¥–∞, –ª–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å, –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π —Ä–µ–π—Å—ã, –∏ –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞.
    //   - –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç selectedFlight –∏ returnedFlight, –ª–æ–≥–∏—Ä—É—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç ("SUCCESS" –∏–ª–∏ "FAILURE").
    //   - –í—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥: –º–∞—Ä—à—Ä—É—Ç, —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ä–µ–π—Å—ã, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞.
    // - –û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ tempResponse_flightSelection –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.

    // üö™ –®–∞–≥ 6: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    private ChainBuilder logout = group("Logout").on(
            exec(
                    http("Logout_0")
                            .get("/cgi-bin/welcome.pl?signOff=1") // –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã—Ö–æ–¥
                            .headers(headers_0)
                            .check(
                                    substring("Session ID has been created").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                                    bodyString().saveAs("tempResponse_logout1") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            ),
            exec(
                    http("Logout_1")
                            .get("/cgi-bin/nav.pl?in=home") // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
                            .headers(headers_1)
                            .check(
                                    substring("Web Tours Navigation Bar").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                                    regex("<input type=\"hidden\" name=\"userSession\" value=\"(.+?)\"").exists(), // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞
                                    bodyString().saveAs("tempResponse_logout2") // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                            )
            )
    );
    // –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –±–ª–æ–∫ —ç–º—É–ª–∏—Ä—É–µ—Ç –≤—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
    // - GET-–∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–µ—Å—Å–∏—é, –≤–æ–∑–≤—Ä–∞—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
    // - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ "Web Tours" –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äî —Ç–µ–∫—Å—Ç–∞ –æ –≤—ã–±–æ—Ä–µ –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è.
    // - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ tempResponse_7 –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.

    // üìã –°—Ü–µ–Ω–∞—Ä–∏–π: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —à–∞–≥–æ–≤ —Å –ø–∞—É–∑–∞–º–∏
    private ScenarioBuilder scn = scenario("UC2_Search")
            .exec(homePage) // –®–∞–≥ 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
            .exec(loginStep) // –®–∞–≥ 2: –í—Ö–æ–¥
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(flights) // –®–∞–≥ 3: –ü–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(findFlight) // –®–∞–≥ 4: –í—ã–±–æ—Ä —Ä–µ–π—Å–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(flightSelection) // –®–∞–≥ 5: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–π—Å–∞
            .pause(3) // ‚è≥ –ü–∞—É–∑–∞
            .exec(logout); // –®–∞–≥ 6: –í—ã—Ö–æ–¥
    // –û–ø–∏—Å–∞–Ω–∏–µ: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–ª–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π UC2_Search, –æ–±—ä–µ–¥–∏–Ω—è—è –≤—Å–µ —à–∞–≥–∏ –≤ –ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
    // –ü–∞—É–∑–∞ –≤ 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É —à–∞–≥–∞–º–∏ —ç–º—É–ª–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–µ–ª–∞—è –Ω–∞–≥—Ä—É–∑–∫—É –±–æ–ª–µ–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π.
    // –ö–∞–∂–¥—ã–π —à–∞–≥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –ø–µ—Ä–µ–¥–∞–≤–∞—è –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Å–µ—Å—Å–∏—é.

    // ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≥—Ä—É–∑–∫–∏: 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ–∫—É–Ω–¥—É, 34 —Å–µ–∫—É–Ω–¥—ã (~100 –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π)
    private static final int USER_COUNT = 1;
    private static final Duration TEST_DURATION = Duration.ofSeconds(1);

    {
        // üöÄ –ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª–∞
        setUp(
                scn.injectOpen(
                        constantUsersPerSec(USER_COUNT).during(TEST_DURATION)
                )
        ).protocols(httpProtocol);
    }
    // –û–ø–∏—Å–∞–Ω–∏–µ: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞.
    // - constantUsersPerSec(3): –ó–∞–ø—É—Å–∫–∞–µ—Ç 3 –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É.
    // - during(34): –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞ ‚Äî 34 —Å–µ–∫—É–Ω–¥—ã, —á—Ç–æ —Å–æ–∑–¥–∞—ë—Ç ~102 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (3 √ó 34).
    // - –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç ~100 –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (10 —Ü–∏–∫–ª–æ–≤ –ø–æ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π + 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö).
    // - injectOpen: –ú–æ–¥–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö.
    // - protocols(httpProtocol): –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HTTP –∫–æ –≤—Å–µ–º –∑–∞–ø—Ä–æ—Å–∞–º.
}